---
title: Send a test request to the DCS
weight: 4.65
last_reviewed_on: 2020-10-16
review_in: 8 weeks
---

# Send a test request to the DCS
You’ll now have a client which can:

* [sign and encrypt a Document Checking Service (DCS) payload](/sign-and-encrypt-a-DCS-payload/#sign-and-encrypt-a-dcs-payload)
* [make requests secured by mutual Transport Layer Security (mTLS)](/create-a-network-connection/#create-a-network-connection-to-the-dcs) to the DCS

You must check whether your client can make successful passport validity requests using the test passport data on this page.

Use the DCS integration endpoint for your test checks. Integration endpoint: <https://dcs-integration.ida.digital.cabinet-office.gov.uk/checks/passport>


## Generate a `valid: true` response

Enter these sample passport details in your client to test a `valid: true` response.

```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "af47ddc1-faa9-42fe-be1f-8131df114713",
  "timestamp": "1997-07-16T19:20:30.45+01:00",
  "passportNumber": "824159121",
  "surname": "Watson",
  "forenames": [
    "Mary"
  ],
  "dateOfBirth": "1932-02-25",
  "expiryDate": "2021-03-01"
}
```

If your request is successful, you should receive a response similar to this:

```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "af47ddc1-faa9-42fe-be1f-8131df114713",
  "error": false,
  "valid": true
}
```

If your response does not look similar to this, [contact the DCS team](/support).

## Generate a `valid: false` response

Enter these sample passport details in your client to test a `valid: false` response.

```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "af47ddc1-faa9-42fe-be1f-8131df114713",
  "timestamp": "1997-07-16T19:20:30.45+01:00",
  "passportNumber": "532114382",
  "surname": "Moriarty",
  "forenames": [
    "James"
  ],
  "dateOfBirth": "1939-10-09",
  "expiryDate": "2022-08-03"
}
```

If your request is successful, you should receive a response similar to this:

```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "af47ddc1-faa9-42fe-be1f-8131df114713",
  "error": false,
  "valid": false
}
```

If your response does not look similar to this, [contact the DCS team](/support).

## Generate an `error: true` response

Enter these sample passport details in your client to test an `error: true` response.

```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "af47ddc1-faa9-42fe-be1f-8131df114713",
  "timestamp": "1997-07-16T19:20:30.45+01:00",
  "passportNumber": "217237799",
  "surname": "Holmes",
  "forenames": [
    "Sherlock"
  ],
  "dateOfBirth": "1940-07-23",
  "expiryDate": "2021-04-19"
}
```

If your request is successful, you should receive a response similar to this:

```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "af47ddc1-faa9-42fe-be1f-8131df114713",
  "error": true,
  "errorMessage": [
    "Unplanned outage"
  ]
}
```

If your response does not look similar to this, [contact the DCS team](/support).

Once you’ve received the data, you can [access the data in a DCS response](/access-the-data-in-a-DCS-response/#access-the-data-in-a-dcs-response).

## Use other sample passport details

Here's some additional sample passport details with specific characteristics for you to test against.

### Passport example with multiple forenames

```json
{
  "correlationId": "15ac0617-2654-4886-9cff-eaac3a47ae99",
  "requestId": "2f42840f-ba07-450a-a53f-79ae7c12d78c",
  "timestamp": "1997-07-16T19:20:30.45+01:00",
  "passportNumber": "398593142",
  "surname": "Hudson",
  "forenames": [
    "Martha",
    "Jane"
  ],
  "dateOfBirth": "1931-06-11",
  "expiryDate": "2022-01-01"
}
```

If your request is successful, you should receive a response similar to this:

```json
{
  "correlationId": "15ac0617-2654-4886-9cff-eaac3a47ae99",
  "requestId": "2f42840f-ba07-450a-a53f-79ae7c12d78c",
  "valid": true,
  "error": false
}
```

 <%= partial "partials/links" %>
